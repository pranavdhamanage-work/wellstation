Azure Linux VM Setup: An Azure Linux VM was created using Ubuntu as the operating system. The VM was accessed via SSH using the command ssh username@public-ip-address.

Python and Pip Installation: The system was updated using sudo apt update and sudo apt upgrade. Python and pip were installed with the command sudo apt install python3 python3-pip.

Flask Application Setup: The Flask application repository was cloned using git clone <repository-url>, and the project directory was navigated using cd <repository-directory>. A virtual environment was created with python3 -m venv venv, and it was activated using source venv/bin/activate. Dependencies were installed by running pip install -r requirements.txt.

Nginx Installation and Configuration: Nginx was installed with sudo apt install nginx. A configuration file for the Flask app was created at /etc/nginx/sites-available/flask-app using sudo nano /etc/nginx/sites-available/flask-app. The following configuration was added to the file:

server {
    listen 80;
    server_name public_ip_address;

    client_max_body_size 1G;

    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

The configuration was enabled by creating a symbolic link with sudo ln -s /etc/nginx/sites-available/flask-app /etc/nginx/sites-enabled/. Nginx was tested and reloaded using sudo nginx -t and sudo systemctl reload nginx.

PM2 Installation and Configuration: Node.js and npm were installed with sudo apt install nodejs npm. PM2 was installed globally using sudo npm install -g pm2. A PM2 configuration file (ecosystem.config.js) was created with the following content:

module.exports = {
  apps: [
    {
      name: "flask-app",
      script: "/home/neeraj.kothari/well-station-python-backend/venv/bin/gunicorn",
      args: "--bind 127.0.0.1:5000 run:app",
      interpreter: "/home/neeraj.kothari/well-station-python-backend/venv/bin/python3",
      env: {
        NODE_ENV: "production",
      },
    },
  ],
};

PM2 was started with pm2 start ecosystem.config.js, and it was set to start on boot using pm2 startup and pm2 save.

Resolving 413 Request Entity Too Large Error: The Nginx configuration file was edited to include client_max_body_size 100M; to allow larger file uploads. Nginx was tested and reloaded again.

Accessing the Flask App: The Flask app was accessed via the public IP address of the Azure VM using a web browser or curl. The app was verified to be running and accessible.



Nohup deployment

- Find the process that are running
ps aux | grep python | grep run.py

- Kill the process
kill p_id

- Take pull

- Start server
nohup python run.py > server.log 2>&1 &